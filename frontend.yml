AWSTemplateFormatVersion: '2010-09-09'
Description: Complete setup with S3, CloudFront, CodePipeline, and CodeBuild

Parameters:
  ConnectionArn:
    Type: String
    Description: CodeStar Connection ARN for GitHub
  FullRepositoryId:
    Type: String
    Description: GitHub Repository ID
  GitHubLocation:
    Type: String
    Description: Full URL of Git Repo
  S3BucketReact:
    Type: String
    Description: S3 bucket that hosts react
  S3BucketArtifacats:
    Type: String
    Description: S3 bucket to store artifact    
  ViteCognitoAuthority:
    Type: String
    Description: Cognito Authority URL
  ViteCognitoClientId:
    Type: String
    Description: Cognito Client ID
  ViteCognitoDomain:
    Type: String
    Description: Cognito Domain URL
  ViteCognitoScope:
    Type: String
    Description: Cognito Scope
  ViteApiUrl:
    Type: String
    Description: API URL for the backend

Resources:
  ReactAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketReact
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactAppBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${ReactAppBucket}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
            
  FrontendCloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: FrontendAppOAC
        Description: Origin access control for CloudFront to S3
        SigningBehavior: always
        SigningProtocol: sigv4
        OriginAccessControlOriginType: s3

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - DomainName: !GetAtt ReactAppBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig: {}
            OriginAccessControlId: !Ref FrontendCloudFrontOAC
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: allow-all
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        HttpVersion: http2
        PriceClass: PriceClass_100

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketArtifacats

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineServiceRole-staging
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildServiceRole-Staging
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: EcommerceFrontend
      Source:
        Type: CODEPIPELINE
        Location: !Ref GitHubLocation
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: VITE_COGNITO_AUTHORITY
            Value: !Ref ViteCognitoAuthority
          - Name: VITE_COGNITO_CLIENT_ID
            Value: !Ref ViteCognitoClientId
          - Name: VITE_COGNITO_DOMAIN
            Value: !Ref ViteCognitoDomain
          - Name: VITE_COGNITO_REDIRECT_URI
            Value: !Sub "https://${CloudFrontDistribution.DomainName}"
          - Name: VITE_COGNITO_LOGOUT_URI
            Value: !Sub "https://${CloudFrontDistribution.DomainName}?logout=1"
          - Name: VITE_COGNITO_SCOPE
            Value: !Ref ViteCognitoScope
          - Name: DISTRIBUTION_ID
            Value: !Ref CloudFrontDistribution
          - Name: VITE_API_URL
            Value: !Ref ViteApiUrl
      ServiceRole: !GetAtt CodeBuildRole.Arn
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: /aws/codebuild/MyCodeBuildProject
          StreamName: build-output-log
      TimeoutInMinutes: 300

 
  MyPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Ecommerce-FE-pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3BucketArtifacats
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: main
                OutputArtifactFormat: CODE_ZIP
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: S3Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                BucketName: !Ref ReactAppBucket
                Extract: true
              RunOrder: 1

Outputs:
  FrontendBucket:
    Description: S3 Bucket for hosting React app
    Value: !Ref ReactAppBucket

  CloudFrontURL:
    Description: CloudFront URL
    Value: !GetAtt CloudFrontDistribution.DomainName
